
ОТЧЕТ ПО ЛАБОРАТОРНОЙ РАБОТЕ №2 ПО JAVA

---ОБЩЕЕ ОПИСАНИЕ МОЕЙ РАБОТЫ---
Программа представляет собой консольное приложение с меню для выполнения 6 задач по объектно-ориентированному программированию. Приложение поддерживает два режима ввода данных: ручной ввод пользователем и автоматический ввод с готовыми данными.

---СТРУКТУРА ЛАБОРАТОРНОЙ РАБОТЫ---
1) MenuAndValidator - основной класс с логикой меню и валидации ввода
2) Name - класс для работы с именами
3) Person - класс для представления человека
4) Employee - класс для представления сотрудника
5) Department - класс для представления отдела
6) Gun - класс для моделирования пистолета
7) Main - точка входа в программу

---ТЕСТИРОВАНИЕ ЗАДАЧ---

1) КАТЕГОРИЯ №1: Задача 3 - Класс Name

МЕТОДЫ: конструкторы Name(), Name(String), Name(String, String), Name(String, String, String), toString(), toString1()
ОПИСАНИЕ: Создание сущности "Имя" с поддержкой различных комбинаций параметров

ТЕСТИРОВАНИЕ (автоматический ввод):
- Клеопатра: "Клеопатра"
- Пушкин Александр Сергеевич: "Пушкин Александр Сергеевич"
- Маяковский Владимир: "Маяковский Владимир"

ТЕСТИРОВАНИЕ (ручной ввод):
Входные параметры: только имя "Мария"
Результат: "Мария"

Входные параметры: фамилия "Иванов", имя "Иван", отчество "Иванович"
Результат: "Иванов Иван Иванович"

2) КАТЕГОРИЯ №1: Задача 2 - Класс Person

МЕТОДЫ: конструкторы Person(), Person(String, int), toString()
ОПИСАНИЕ: Создание сущности "Человек" с именем и ростом

ТЕСТИРОВАНИЕ (автоматический ввод):
- Клеопатра, рост 152: "Клеопатра, рост: 152"
- Пушкин, рост 167: "Пушкин, рост: 167"
- Владимир, рост 189: "Владимир, рост: 189"

ТЕСТИРОВАНИЕ (ручной ввод):
Входные параметры: имя "Анна", рост 165
Результат: "Анна, рост: 165"

3) КАТЕГОРИЯ №2: Задача 4 - Сотрудники и отделы

МЕТОДЫ: Employee(String, Department), Department(String), setManager(), toString()
ОПИСАНИЕ: Создание системы сотрудников и отделов с назначением руководителей

ТЕСТИРОВАНИЕ (автоматический ввод):
Созданы сотрудники: Петров, Козлов, Сидоров в отделе IT
Назначен начальник: Козлов
Результат:
- Петров: "Петров работает в отделе IT, начальник которого Козлов"
- Козлов: "Козлов работает в отделе IT, начальник которого Козлов"
- Сидоров: "Сидоров работает в отделе IT, начальник которого Козлов"

ТЕСТИРОВАНИЕ (ручной ввод):
Создан отдел: "Финансы"
Созданы сотрудники: "Смирнов", "Петрова", "Васильев"
Назначен начальник: "Смирнов"
Результат корректно отображает информацию о сотрудниках и их начальнике

4) КАТЕГОРИЯ №3: Задача 4 - Список сотрудников отдела

МЕТОДЫ: getAllDepartmentEmployees(), getEmployees(), addEmployee()
ОПИСАНИЕ: Получение списка всех сотрудников отдела через ссылку на любого сотрудника

ТЕСТИРОВАНИЕ (автоматический ввод):
Через Петрова: список сотрудников IT отдела (Петров, Козлов, Сидоров)
Через Козлова: тот же список сотрудников
Через Сидорова: тот же список сотрудников

ТЕСТИРОВАНИЕ (ручной ввод):
Отдел "Разработка", сотрудники: "Алексей", "Мария", "Дмитрий"
Получение списка через любого сотрудника возвращает полный список всех трех сотрудников

5) КАТЕГОРИЯ №4: Задача 5 - Альтернативное представление имен

МЕТОДЫ: toString1()
ОПИСАНИЕ: Альтернативный формат вывода имен с измененным порядком параметров

ТЕСТИРОВАНИЕ (автоматический ввод):
- Клеопатра: "Клеопатра"
- Александр Сергеевич Пушкин: "Александр Сергеевич Пушкин"
- Владимир Маяковский: "Владимир Маяковский"
- Христофор Бонифатьевич: "Христофор Бонифатьевич"

ТЕСТИРОВАНИЕ (ручной ввод):
Входные параметры: имя "Сергей", фамилия "Петров"
Результат: "Сергей Петров"

6) КАТЕГОРИЯ №5: Задача 1 - Класс Gun

МЕТОДЫ: конструкторы Gun(), Gun(int), fire(), getNumberOfCartridges(), setNumberOfCartridges()
ОПИСАНИЕ: Моделирование пистолета с возможностью стрельбы и перезарядки

ТЕСТИРОВАНИЕ (автоматический ввод):
Создан пистолет с 3 патронами
Выстрелы: "Бах!", "Бах!", "Бах!", "Клац!", "Клац!"

ТЕСТИРОВАНИЕ (ручной ввод):
Создан пистолет с 2 патронами
Действия: выстрел ("Бах!"), проверка патронов (осталось 1), выстрел ("Бах!"), выстрел ("Клац!"), перезарядка на 3 патрона

---ВСПОМОГАТЕЛЬНЫЕ МЕТОДЫ ВАЛИДАЦИИ---
- inputName() - ввод и валидация имени
- inputLastname() - ввод и валидация фамилии
- inputSurname() - ввод и валидация отчества
- inputHeight() - ввод и валидация роста
- inputDepartment() - ввод и валидация названия отдела

---ОСОБЕННОСТИ РЕАЛИЗАЦИИ---
1. Все классы инкапсулируют данные с использованием private полей и public get/set методов
2. Реализована двусторонняя связь между Employee и Department
3. Класс Department автоматически добавляет сотрудников в список при создании
4. Реализована обработка некорректного ввода во всех методах валидации
5. Поддержка двух режимов работы: автоматического и ручного ввода

---ЗАКЛЮЧЕНИЕ---
Все 6 задач успешно реализованы и протестированы. Реализована удобная система меню с защитой от некорректного ввода. Каждый класс решает конкретную задачу из лабораторной работы №2.
